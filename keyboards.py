from telebot.types import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton
from answers import *
from db import get_user, get_posts, get_all_posts
from config import vk,trading_group_link

index_btn = InlineKeyboardButton("‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="index")

def return_akcii():
    key = InlineKeyboardMarkup()
    but7 = InlineKeyboardButton(text='‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='return_akcii')
    key.add(but7)
    return key

def return_about():
    key = InlineKeyboardMarkup()
    but7 = InlineKeyboardButton(text='‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='return_about')
    key.add(but7)
    return key

def return_about_and_help():
    key = InlineKeyboardMarkup()
    but6 = InlineKeyboardButton(text='‚ñ™–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π‚ñ™Ô∏è', url='t.me/bkrtboss')
    but7 = InlineKeyboardButton(text='‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='return_about')
    key.add(but6)
    key.add(but7)
    return key


ADMINS = [445116305, 516703737, 669917374, 697342273]

def training():
    key = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton(text='‚ñ™–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª‚ñ™', url='https://t.me/bkrtfree')
    but2 = InlineKeyboardButton(text='‚ñ™–ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µ‚ñ™', callback_data="navigate")
    key.add(but1)
    key.add(but2)
    key.add(index_btn)
    return key

def navigate():
    navigate_btns = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton(text='–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –≤ —Ç–æ–ø–∏–∫–µ –≥—Ä—É–ø–ø—ã –í–ö',url=vk)
    but2 = InlineKeyboardButton(text='–ú—ã –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö', callback_data='network')
    navigate_btns.add(but1)
    navigate_btns.add(but2)
    navigate_btns.add(index_btn)
    return navigate_btns

def about():
    key = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton(text='–û –Ω–∞—Åüìì', callback_data='about_us')
    but2 = InlineKeyboardButton(text='–†–µ–∫–ª–∞–º–∞üìù', callback_data='ads')
    but3 = InlineKeyboardButton(text='–¢—Ä–µ–Ω–∏–Ω–≥–∏üéØ', callback_data='trening')
    but4 = InlineKeyboardButton(text='–û–Ω–ª–∞–π–Ω –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏üì≤', callback_data='consult')
    but5 = InlineKeyboardButton(text='üî∏–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüî∏', url='t.me/bkrtboss')
    key.add(but1)
    key.add(but2)
    key.add(but3)
    key.add(but4)
    key.add(but5)
    key.add(index_btn)
    return key

def akcii(message):
    key = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton(text='üîπ–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—èüîπ', callback_data='add_sb')
    but2 = InlineKeyboardButton(text='üîπ–î–Ω–∏ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—Éüîπ', callback_data='day_of_sub')
    but3 = InlineKeyboardButton(text='üîπ–ö–µ—à–±–µ–∫ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—Éüîπ', callback_data='cashback')
    but4 = InlineKeyboardButton(text='üîπ–†–µ–∫–ª–∞–º–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ –í–öüîπ', callback_data='ad_in_vk')
    but5 = InlineKeyboardButton(text='üîπ–†–µ–∫–ª–∞–º–∞ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ –≤ –ò–Ω—Å—Ç–µüîπ', callback_data='ad_in_insta')
    but6 = InlineKeyboardButton(text='üîπ–ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞üîπ', callback_data='invite_friends')
    but7 = InlineKeyboardButton(text='üîπ–§–æ—Ä–º—É–ª—è—Ä —Å –∞–∫—Ü–∏—è–º–∏üîπ', url='https://yadi.sk/i/k1aMYs9idbpS3w')
    if message in ADMINS:
        key.add(but1)
    key.add(but2)
    key.add(but3)
    key.add(but4)
    key.add(but5)
    key.add(but6)
    key.add(but7)
    key.add(index_btn)
    return key

def add_media_key():
    key = InlineKeyboardMarkup(row_width=1)

    add_imgur = InlineKeyboardButton(text="üñº –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É", callback_data="add_imgur")
    add_gif = InlineKeyboardButton(text="üñº –î–æ–±–∞–≤–∏—Ç—å GIF", callback_data="add_gif")
    y_add_btn = InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è/–¥–æ–∫—É–º–µ–Ω—Ç—ã", callback_data="add_media")
    no_add_btn = InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –¥–∞–ª–µ–µ ‚û°Ô∏è", callback_data="next_step")

    key.add(add_imgur, add_gif,y_add_btn, no_add_btn)
    return key


def add_image_key():
    key = InlineKeyboardMarkup(row_width=1)
    y_add_btn = InlineKeyboardButton(text="üñº –î–æ–±–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ/–¥–æ–∫—É–º–µ–Ω—Ç", callback_data="add_media")
    no_add_btn = InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –¥–∞–ª–µ–µ ‚û°Ô∏è", callback_data="next_step")

    key.add(y_add_btn, no_add_btn)
    return key


def mailing_btn():
    key = InlineKeyboardMarkup(row_width=1)

    key.add(InlineKeyboardButton("‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing"),
            InlineKeyboardButton("üì§ –í—Å–µ –ø–æ—Å—Ç—ã", callback_data="all_posts"))
    return key


def return_btn():
    key = InlineKeyboardMarkup()

    key.add(index_btn)
    return key


def periodicity_markup():
    key = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)

    key.add("–°–µ–≥–æ–¥–Ω—è", "–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π")
    key.add("–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π", "–ï–∂–µ–º–µ—Å—è—á–Ω—ã–π")
    return key


def cancel_markup():
    key = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    cancel_btn = KeyboardButton(text='‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞')

    key.add(cancel_btn)
    return key



def return_markup():
    key = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
    cancel_btn = KeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è')

    key.add(cancel_btn)
    return key


def check_pay_key():
    key = ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)

    check_payment = KeyboardButton(text='–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É')
    cancel_btn = KeyboardButton('–í–µ—Ä–Ω—É—Ç—å—Å—è')
    key.add(check_payment)
    key.add(cancel_btn)
    return key


def payment_key(price, payment_link):
    key = InlineKeyboardMarkup()

    pay_btn = InlineKeyboardButton(text=f"–û–ø–ª–∞—Ç–∏—Ç—å {price}(free-kassa)", url=payment_link)
    plans = InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —Ç–∞—Ä–∏—Ñ ‚Ü©Ô∏è", callback_data="t_plans")
    key.add(pay_btn)
    key.add(plans)
    key.add(index_btn)
    return key


def index_key(user_id):
    key = InlineKeyboardMarkup()

    trading = InlineKeyboardButton(text="–¢–æ—Ä–≥–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã  üíπ", callback_data="trading")
    training = InlineKeyboardButton("–¢–æ—Ä–≥–æ–≤—ã–µ –∏–¥–µ–∏ üë§", callback_data="training")
    teaching = InlineKeyboardButton("–û–±—É—á–µ–Ω–∏–µ —Ç—Ä–µ–π–¥–∏–Ω–≥—É  üíª", callback_data="teaching")
    suit = InlineKeyboardButton("–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ò–Ω–≤–µ—Å—Ç –ü–æ—Ä—Ç—Ñ–µ–ª—å  üìà", callback_data="suit")
    akcii = InlineKeyboardButton("–ê–∫—Ü–∏–∏ üéÅ", callback_data="akcii")
    about = InlineKeyboardButton("–û –ù–∞—Å I –î–æ–ø. –£—Å–ª—É–≥–∏ I –ö–æ–Ω—Ç–∞–∫—Ç—ã  üìù", callback_data="about")
    help_ = InlineKeyboardButton(text='‚ñ™–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π‚ñ™Ô∏è', url='t.me/bkrtboss')
    key.add(trading)
    key.add(training)
    key.add(teaching)
    key.add(suit)
    key.add(akcii)
    key.add(about)
    key.add(help_)    
    if user_id in ADMINS:
        key.add(InlineKeyboardButton("‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing"),
                InlineKeyboardButton("‚úâÔ∏è –†–µ–ø–æ—Å—Ç", callback_data="repost")
                )
    return key

def repost_put():
    key = InlineKeyboardMarkup(row_width=1)
    key.add(
        InlineKeyboardButton("–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ªüí∞", callback_data="repost_private_channel"),
        InlineKeyboardButton("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ªüìà", callback_data="repost_free_channel"),
        InlineKeyboardButton("‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="index")

    )

    return key

def repost_from():
    key = InlineKeyboardMarkup()
    key.add(InlineKeyboardButton("VK", callback_data="repost_vk"),
            InlineKeyboardButton("Instagram", callback_data="repost_insta"),
            InlineKeyboardButton("‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="index")
            )
    return key

def repost_send():
    key = InlineKeyboardMarkup(row_width=1)

    confirm = InlineKeyboardButton("üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="send_sub")
    schedule = InlineKeyboardButton("‚è± –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="schedule")
    key.add(confirm)
    key.add(schedule)
    return key

def confirm_key():
    key = InlineKeyboardMarkup()

    confirm = InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ ‚òëÔ∏è", callback_data="confirm")
    # trial = InlineKeyboardButton(price_answers.get("trial"), callback_data="trial")

    key.add(confirm)
    # if not get_user(user_id):
    #     key.add(trial)
    key.add(index_btn)
    return key


def get_phone_key():
    key = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)

    button_phone = KeyboardButton(text="üì≤ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ", request_contact=True)
    cancel_btn = KeyboardButton(text='‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è')

    key.add(button_phone)
    key.add(cancel_btn)
    return key


def trading_prices(user_id):
    key = InlineKeyboardMarkup()
    # trial = InlineKeyboardButton(price_answers.get("trial"), callback_data="trial")

    # try:
    #     if not get_user(user_id):
    #         key.add(trial)
    # except Exception as e:
    #     print(e)
    begin_btn = InlineKeyboardButton(price_answers.get("begin"), callback_data="trading_begin")
    optimal_btn = InlineKeyboardButton(price_answers.get("optimal"), callback_data="trading_optimal")
    standart_btn = InlineKeyboardButton(price_answers.get("standart"), callback_data="trading_standart")
    premium_btn = InlineKeyboardButton(price_answers.get("premium"), callback_data="trading_premium")

    key.add(begin_btn)
    key.add(optimal_btn)
    key.add(standart_btn)
    key.add(premium_btn)
    key.add(index_btn)

    key.add()
    return key


def get_trial():
    key = InlineKeyboardMarkup()
    get_trial_btn = InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥", callback_data="get_trial")
    key.add(get_trial_btn)
    key.add(index_btn)
    return key


def update_subscribe():
    key = InlineKeyboardMarkup()
    key.add(InlineKeyboardButton("–ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "https://t.me/bkrtbot"))
    key.add(InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –≤ –º–µ–Ω—é", callback_data="index"))
    return key


def sub_msg_key():
    key = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton("–ë–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ ü§ñ", callback_data="index")
    but2 = InlineKeyboardButton("üîªVK", url='vk.com/bkrt_inc')
    but3 = InlineKeyboardButton("üîπInstagram", url='https://www.instagram.com/bkrt_inc/')
    but4 = InlineKeyboardButton("–ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µüìù", callback_data="navigate")
    but5 = InlineKeyboardButton("–ê–∫—Ü–∏–∏üéÅ", callback_data="akcii")
    but6 = InlineKeyboardButton("üî∏–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüî∏", url='t.me/bkrtboss')
    key.add(but1)
    key.add(but2)
    key.add(but3)
    key.add(but4)
    key.add(but5)
    key.add(but6)
    return key

def sub_msg_key_navigate():
    key = InlineKeyboardMarkup()
    but1 = InlineKeyboardButton("–ë–æ—Ç –ø–æ–º–æ—â–Ω–∏–∫ ü§ñ", callback_data="index")
    but2 = InlineKeyboardButton("üîªVK", url='vk.com/bkrt_inc')
    but3 = InlineKeyboardButton("üîπInstagram", url='https://www.instagram.com/bkrt_inc/')
    but4 = InlineKeyboardButton("–ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ –∫–∞–Ω–∞–ª–µüìù", callback_data="navigate")
    but5 = InlineKeyboardButton("–ê–∫—Ü–∏–∏üéÅ", callback_data="akcii")
    but6 = InlineKeyboardButton("üî∏–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–πüî∏", url='t.me/bkrtboss')
    but7 = InlineKeyboardButton(text='‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è', callback_data='return_navigate')
    key.add(but1)
    key.add(but2)
    key.add(but3)
    key.add(but4)
    key.add(but5)
    key.add(but6)
    key.add(but7)
    return key


def send_sub_msg_key(chat_type):
    key = InlineKeyboardMarkup(row_width=1)

    confirm = InlineKeyboardButton("üì© –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="send_sub")
    schedule = InlineKeyboardButton("‚è± –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å", callback_data="schedule")
    edit = InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_sub")

    if chat_type == "private":
        edit = InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_private")

    elif chat_type == "free":
        edit = InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit_free")

    cancel = InlineKeyboardButton("–û—Ç–º–µ–Ω–∞", callback_data="index")

    key.add(confirm, schedule, edit, cancel)
    return key


def select_posting_key():
    key = InlineKeyboardMarkup(row_width=1)
    key.add(
        InlineKeyboardButton("–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ªüí∞", callback_data="private_channel"),
        InlineKeyboardButton("–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ªüìà", callback_data="free_channel"),
        InlineKeyboardButton("üì¨ –õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="send_private"),
        InlineKeyboardButton("üì§ –í—Å–µ –ø–æ—Å—Ç—ã", callback_data="all_posts"),
        InlineKeyboardButton("‚Ü™Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è", callback_data="index")

    )

    return key



def list_posts_key(n):
    key = InlineKeyboardMarkup()

    next_page_btn = InlineKeyboardButton("–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", callback_data="next_page")
    prev_page_btn = InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="prev_page")
    count = len(get_all_posts())
    print("COUNT", count)
    pages = []
    page = []
    for i in range(0, count, 5):
        page.append(i)

    for i in page:
        x = i + 5
        s = [i, x]
        pages.append(s)

    posts = get_posts(pages[n][0], pages[n][1])

    for post in posts:
        key.add(
            InlineKeyboardButton(post.text[:20], callback_data=post.id),
            InlineKeyboardButton(post.time, callback_data=f"call"),

            InlineKeyboardButton("‚ùå", callback_data=f"del_{post.id}")
        )

    if n == 0 and count > 5:
        key.add(next_page_btn)

    elif len(pages) == n + 1:
        key.add(prev_page_btn)

    elif n != 0 and count > 5:
        key.add(prev_page_btn, next_page_btn)

    key.add(InlineKeyboardButton("‚úâÔ∏è –†–∞—Å—Å—ã–ª–∫–∞", callback_data="mailing")
            )
    return key
